<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfkBRoUCyfrlKyzAAAFH0lEQVRYR6VXXWhcRRT+
        ak323jszGyj+FfIQFCwoRNSnIkilWlBU8KEgVEUsSCn44ltKJcVSKVFfAj5EatI2pvlrbINxk9q0SdU0
        sZrE5v//T0Qovpvdzeb6zW52c3fubJrWhQ/unTl7vm/OnHNmLvhzt4XFHudzyEcGIF8ahXdkCur0BGTj
        BKKEqhqFPHILYv9XEI+hp8dBaandTxjWwRwOoFz8CvXkFETnIoS/Arm2DBm3YWPOn4bb3Q1RXg4Im08D
        1kEXZXCagCemISfpdHUZKhEk2xraVsXnIGfaEdkDlDlWjgzyB3bvhofKOmcE8uQS5L8r90QcQoI+kuMQ
        X+LVjyJp3wYfsfmiDcrxqJiGOkPilMXhfeFP+pqCbCGHLRKBl/crnWmUnNHhszn6v2DidqIstB25B2cC
        4jQNbUl2z9vACCbDY3JtDOqskROZhy6IZ7hfNqL123AqRiFa6MC3zOeBNkmW5cAfUB8swrHaX4f3fKBM
        ufeAtwA5b8l0fxjylO/70GCEmlYQLShC580MxEDWfgjRdxctoucg7hzIlSiV9MN7zjQiEiNwPtGO+Nuh
        oZ/HIFuXEbVESiVYsv2mPX2/yXmWcZ59YhglBzNRmI1FqHrQsvrEGERd0GEaPnbchrrISARyRcXH4PVx
        2Q8EbfV/m+Ed6+O2MDq0Ezkhs2B/8/1itCHy+BI73KazPPjjkN+aIvQ7c6JR5wQdr01C9n0IFJk2bXAq
        Y8yDTiZfP0WwHOkzI2IRxf4lOGUYhHpDJ45BHMQ6yWqpNuc8S8AIXdBht81lyB/0u0iukRWRiUQ6X9ZH
        oD7GOFSFQRgCI7Q6Aq/GjESa2Ai7HmtG8bFOeDnyoIg+iOxiEzxfGsDmUBsk2wIJttT6kIgA9BzJj7Ok
        84hNaBGMenwe4ipm2SItZIXg8whuxgnkr3qDnHv6WScioZWb0JG4CaGTvo8CotsWQNUp7vkvhQS0sU90
        WUJvgxbRq/NnGt5ZG1kYKsFsv3H3LXAuXDHICqETbi+7mzxuJwxCxXnjuWFmu34PCWKfaGaJXmFp20g3
        oVLtcFtYhu5bJLGdAWno9soW3HsQ2Bkk0sTfwa26BPeyKUK/czvOdcEtKEILbIWoQAvUHhJZG5Hec5bK
        dRtBKxMuhiI2GeG3wW0Izmdt2uDVFsqJH7DT/xryabbiWbZiby4sQO+5e80kz9S5c4KllnNMEUmKOG8X
        KuqDxFl08LpGX4zq3r3uLcgXzaNYd8cheIeDTjMOvVMkDDnkWIrb0Wban0PRs5xPGvYpRvC9jSMZ7j48
        LOeh/g4K0KCo1DC8o9qRBlf5RWyLOtfdrx1ee9a+kdd0ltu6adcBb/UQENXcaQEoBY9kuY+klnugSg1C
        vHMRoirGA8R0ZoF/GU5jPSKvxOxJmGKVvKwjvylAg3e1SagaktquUkkeqenmYXFoBXtBiJxj6+1sv6XI
        +2jJPbio05dS2b2EaJ6ALPhVlNAJZzreDlh2SYb+960upWkcwq4oLyhXeW5bjmgVZ8LehwiRIvnNw4ju
        MvmI/IH0x0N1dYSn5DcktX4bMBLJ7W+Hx5yQTaXMM5NrA9ZBVyfJz0zMBag7JDU6pYjzNLtbFFIxiH/O
        w3vNEvYgrIMZsE6PAnIIJfu5LQsk1x0zJ+a3cCRSesXfw/uL/eL1F/CQCly/C8E6mA9dMrFYpJ1tW99m
        pxD9dAaygUf5jz9BXuuAaGb9n2yF+3Y1ip9CTU1RoMy2ANz/AIkaXnopuXFBAAAAAElFTkSuQmCC
</value>
  </data>
</root>